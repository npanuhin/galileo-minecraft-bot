// Node >=18

import {readdir, writeFile} from 'node:fs/promises'
import {dirname, resolve} from 'node:path'
import {fileURLToPath} from 'node:url'

const __dirname = dirname(fileURLToPath(import.meta.url))
const handlersDir = resolve(__dirname, '../telegram/handlers')
const indexPath = resolve(handlersDir, 'index.ts')

const HEADER = `// Auto-generated by src/scripts/gen-handlers-index.mjs
// Do not edit manually.
`

function toExportName(file) {
	// handleMessage.ts -> handleMessage
	return file.replace(/\.tsx?$/, '')
}

function isHandlerFile(file) {
	return /\.tsx?$/.test(file) && file !== 'index.ts'
}

const contentFor = (files) => {
	const exports = files
		.map((f) => `export { ${toExportName(f)} } from './${toExportName(f)}'`)
		.join('\n')
	return `${HEADER}\n${exports}\n`
}

async function main() {
	const files = (await readdir(handlersDir)).filter(isHandlerFile).sort()
	const out = contentFor(files)
	await writeFile(indexPath, out, 'utf8')
	console.log(`Generated ${indexPath} with ${files.length} exports.`)
}

main().catch((err) => {
	console.error('Failed to generate handlers index:', err)
	process.exit(1)
})
