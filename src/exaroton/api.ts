import {getEnv} from '../telegram/utils/envManager'

export interface ExarotonServer {
	id: string
	name: string
	address: string
	motd: string
	status: number // 0 = OFFLINE, 1 = ONLINE, etc.
	players: {
		max: number
		count: number
		list: string[]
	}
	software: {
		id: string
		name: string
		version: string
	}
}

const API_BASE_URL = 'https://api.exaroton.com/v1'

export async function getServerStatus(): Promise<ExarotonServer> {
	const env = getEnv()
	const response = await fetch(`${API_BASE_URL}/servers/${env.EXAROTON_SERVER_ID}`, {
		method: 'GET',
		headers: {
			'Authorization': `Bearer ${env.EXAROTON_API_TOKEN}`
		}
	})

	if (!response.ok) {
		const errorData = await response.json() as { error?: string }
		throw new Error(`Exaroton API Error: ${response.status} - ${errorData.error || response.statusText}`)
	}

	const jsonResponse = await response.json() as { data: ExarotonServer }
	return jsonResponse.data
}

export const SERVER_STATUS_MAP: { [key: number]: string } = {
	0: 'üò¥ –û—Ñ—Ñ–ª–∞–π–Ω',
	1: '‚úÖ –û–Ω–ª–∞–π–Ω',
	2: '‚è≥ –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...',
	3: '‚è≥ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...',
	4: 'üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...',
	5: 'üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...',
	6: '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...',
	7: 'üí• –£–ø–∞–ª üò¢',
	8: '‚åõ –í –æ–∂–∏–¥–∞–Ω–∏–∏...',
	9: '‚ÜîÔ∏è –ü–µ—Ä–µ–Ω–æ—Å...',
	10: 'üõ†Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞...',
}
